% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/manualComplexFeatureAnnotation.R
\name{assessComplexFeaturesWithSEC}
\alias{assessComplexFeaturesWithSEC}
\title{Check for each feature in `detected.features` if there is another feature in
`true.positive.features` that is close to it. The endresult is a DF of feature
retention times that are flagged with either 'FP', 'TP', 'TN', or 'FN'.}
\usage{
assessComplexFeaturesWithSEC(true.positive.features, detected.features,
  all.complexes, min.rt, max.rt, feature.vicinity.tol = 5)
}
\arguments{
\item{true.positive.features}{data.table of true, manually annotated features.
The DF must have the columns: 'complex_id', 'rt'.}

\item{detected.features}{data.table of detected features.
The DF must have the columns: 'complex_id', 'center_rt'.}

\item{all.complexes}{A list of unique complex ids that should be checked for
features. Every SEC position for each of those
complexes will be checked for a detected feature.}

\item{feature.vicinity.tol}{A number that indicates how close an
experimentally determined feature has to be to a manually annotated one, to
still count as a true positive.
experimentally determined feature has to be to a manually annotated one, to
still count as a true positive.}
}
\value{
A data.table with the columns: 'complex_id', 'rt', 'type', where
        type is of type character an is either 'FP', 'FN', 'TP', 'TN'.
}
\description{
Check for each feature in `detected.features` if there is another feature in
`true.positive.features` that is close to it. The endresult is a DF of feature
retention times that are flagged with either 'FP', 'TP', 'TN', or 'FN'.
}
\examples{
manual.annotations.raw <- readManualAnnotationFile(annotations.1.raw)
manual.annotations <-
    createManualComplexAnnotations(
     manual.annotations.1.raw, 'apexes_partially_observed')
detected.features <- fread('cprophet_output/sec_complexes.tsv')
assessed.feats <-
    assessComplexFeaturesWithSEC(manual.annotations,
                                 detected.features, all.complexes)
}

